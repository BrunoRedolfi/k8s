apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      securityContext:
        runAsUser: 999  # Usuario mysql
        fsGroup: 999
      containers:
      - name: mysql
        image: mysql:8.0
        securityContext:
          readOnlyRootFilesystem: false  # MySQL necesita escribir
          allowPrivilegeEscalation: false
        envFrom:
        - secretRef:
            name: db-secret
        - configMapRef:
            name: mysql-config
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-initdb
        configMap:
          name: mysql-init-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  MYSQL_DATABASE: "testdb"
  MYSQL_USER: "testuser"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
data:
  init.sql: |
    CREATE USER IF NOT EXISTS 'testuser'@'%' IDENTIFIED BY 'testpass';
    GRANT ALL PRIVILEGES ON testdb.* TO 'testuser'@'%';
    FLUSH PRIVILEGES;
